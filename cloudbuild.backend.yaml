steps:
  # 0. Prepare files and set permissions
  - name: "ubuntu"
    args: 
      - "bash"
      - "-c"
      - |
        cd backend
        # Create directories
        mkdir -p Route controllers middleware models config
        
        # Set permissions
        chmod +x copy-files.sh
        ./copy-files.sh
        
        # Ensure all JS files are readable
        find . -type f -name "*.js" -exec chmod 644 {} \;
        find . -type d -exec chmod 755 {} \;
        
        # List files for debugging
        echo "Listing files in Route directory:"
        ls -la Route/
        echo "Listing files in controllers directory:"
        ls -la controllers/
        echo "Listing files in middleware directory:"
        ls -la middleware/

  # 1. Build Docker image untuk backend
  - name: "gcr.io/cloud-builders/docker"
    args: ["build", "-t", "gcr.io/$PROJECT_ID/medical-records-be", "."]
    dir: "backend"

  # 2. Push ke Container Registry / Artifact Registry
  - name: "gcr.io/cloud-builders/docker"
    args: ["push", "gcr.io/$PROJECT_ID/medical-records-be"]

  # 3. Deploy ke Cloud Run
  - name: "gcr.io/cloud-builders/gcloud"
    entrypoint: gcloud
    args:
      [
        "run",
        "deploy",
        "medical-records-be",
        "--image",
        "gcr.io/$PROJECT_ID/medical-records-be",
        "--timeout",
        "1000s",
        "--port",
        "3000",
        "--region",
        "us-central1",
        "--allow-unauthenticated",
        "--set-env-vars",
        "ACCESS_TOKEN_SECRET=${_ACCESS_TOKEN_SECRET},REFRESH_TOKEN_SECRET=${_REFRESH_TOKEN_SECRET},DB_HOST=34.72.200.235,DB_NAME=${_DB_NAME},DB_PASSWORD=${_DB_PASSWORD},DB_USERNAME=${_DB_USERNAME},CORS_ORIGIN=${_CORS_ORIGIN}",
      ]

# Log hanya akan disimpan di Google Cloud Logging
# Log tidak akan disimpan di Google Cloud Storage (butuh hak akses).
options:
  logging: CLOUD_LOGGING_ONLY