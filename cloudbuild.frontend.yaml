steps:
  # Verify frontend directory structure
  - name: 'ubuntu'
    dir: 'frontend'
    args:
      - 'bash'
      - '-c'
      - |
        echo "Checking frontend directory structure..."
        ls -la
        echo "Creating js directory if not exists..."
        mkdir -p js
        echo "Verifying file permissions..."
        chmod -R 755 .

  # Install dependencies
  - name: 'node:18'
    dir: 'frontend'
    entrypoint: npm
    args: ['install']

  # Create env.js with configuration
  - name: 'ubuntu'
    dir: 'frontend'
    args:
      - 'bash'
      - '-c'
      - |
        echo "Creating env.js..."
        cat > js/env.js << 'EOF'
        window._env_ = {
          API_URL: 'https://medical-records-be-913201672104.us-central1.run.app',
        };
        EOF
        echo "Verifying env.js..."
        cat js/env.js

  # Verify required files exist and show contents
  - name: 'ubuntu'
    dir: 'frontend'
    args:
      - 'bash'
      - '-c'
      - |
        echo "Verifying required files..."
        for file in index.html login.html dashboard.html patients.html doctors.html records.html; do
          if [ ! -f "$file" ]; then
            echo "Error: $file not found!"
            exit 1
          else
            echo "Found $file:"
            head -n 1 "$file"
          fi
        done
        echo "All required files present"
        echo "Directory structure:"
        find . -type f -name "*.html" -o -name "*.js"

  # Build Docker image with debug output
  - name: 'gcr.io/cloud-builders/docker'
    args: 
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/medical-records-fe'
      - '--progress=plain'
      - '--no-cache'
      - './frontend'

  # Push to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/medical-records-fe']

  # Deploy to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'medical-records-fe'
      - '--image'
      - 'gcr.io/$PROJECT_ID/medical-records-fe'
      - '--region'
      - 'us-central1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--port'
      - '3000'

# Log hanya akan disimpan di Google Cloud Logging
options:
  logging: CLOUD_LOGGING_ONLY